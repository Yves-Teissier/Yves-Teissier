THEORY ProofList IS
_f(1) & _f(2) & _f(7) & _f(8) & _f(15) & WellDefinedness_average.1,(_f(24) => _f(25));
_f(1) & _f(2) & _f(7) & WellDefinednessInvariant.3,(_f(19) & _f(20) => _f(23));
_f(1) & _f(2) & _f(7) & WellDefinednessInvariant.2,(_f(18) & _f(20) => _f(22));
_f(1) & _f(2) & _f(7) & WellDefinednessInvariant.1,(_f(20) => _f(21));
_f(1) & _f(2) & _f(7) & _f(8) & _f(15) & _f(16) & Operation_average.1,(_f(3) => _f(17));
_f(1) & _f(2) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & Operation_enter.3,(_f(3) => _f(14));
_f(1) & _f(2) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & Operation_enter.2,(_f(3) => _f(13));
_f(1) & _f(2) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & Operation_enter.1,(_f(3) => _f(12));
_f(1) & _f(2) & Initialisation.3,(_f(3) => _f(6));
_f(1) & _f(2) & Initialisation.2,(_f(3) => _f(5));
_f(1) & _f(2) & Initialisation.1,(_f(3) => _f(4))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
CANDIDATE: FIN(INTEGER) & not(CANDIDATE = {});
"Refinement is correct";
((0) = (SIGMA(zz).(((zz) : (dom({}))) | ({} )(zz))));
((0) = (card(dom({}))));
(({}) = (dom({})));
((marks) : (((CANDIDATE) +-> (((0) .. (100))))));
((total$1) = (SIGMA(zz).(((zz) : (dom(marks))) | (marks )(zz)))) & ((num$1) = (card(dom(marks)))) & ((candidates$1) = (dom(marks)));
((cc) : (CANDIDATE));
not(((cc) : (dom(marks))));
((nn) : (((0) .. (100))));
(((total$1 + nn)) = (SIGMA(zz).(((zz) : (dom(((marks) <+ (({((cc) |-> (nn))})))))) | (((marks) <+ (({((cc) |-> (nn))}))) )(zz))));
(((num$1 + 1)) = (card(dom(((marks) <+ (({((cc) |-> (nn))})))))));
((((candidates$1) \/ (({cc})))) = (dom(((marks) <+ (({((cc) |-> (nn))}))))));
not(((marks) = ({})));
((aa) = (aa$1));
(((SIGMA(zz).(((zz) : (dom(marks))) | (marks )(zz)) / card(dom(marks)))) = ((total$1 / num$1)));
((zz) : (dom(marks)));
((total$1) = (SIGMA(zz).(((zz) : (dom(marks))) | (marks )(zz))));
"Invariant is well defined";
((SET(zz).(((zz) : (dom(marks))))) : (FIN(SET(zz).(((zz) : (dom(marks)))))));
((marks) : (((dom(marks)) +-> (ran(marks)))));
((dom(marks)) : (FIN(dom(marks))));
"Operation is well defined";
not(((num$1) = (0)))
END
&
THEORY EnumerateX
END

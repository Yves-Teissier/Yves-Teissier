/* MainControl_i
 * Author: yves
 * Creation date: 11/06/2022
 * This component is used to configure properly UC1 and UC2 and proves that system invariants are respected.
 */

IMPLEMENTATION MainControl_i
REFINES MainControl

SEES 
    CTX
    
IMPORTS
    ControlUnit2, MailBox
    
CONCRETE_VARIABLES
    cu2_current_main_state, 
    cu2_current_running_state, 
    cu2_current_on_state,
    cu2_new_main_state, 
    cu2_new_running_state, 
    cu2_new_on_state
    
INVARIANT
    cu2_current_main_state : MAIN_STATE &
    cu2_current_running_state : RUNNING_STATE &
    cu2_current_on_state : ON_STATE &
    cu2_new_main_state : MAIN_STATE &
    cu2_new_running_state : RUNNING_STATE &
    cu2_new_on_state : ON_STATE
    
INITIALISATION
    cu2_current_main_state := OFF;
    cu2_current_running_state := UNKNOWN;
    cu2_current_on_state := ON_IDLE;
    cu2_new_main_state := OFF;
    cu2_new_running_state := UNKNOWN;
    cu2_new_on_state := ON_IDLE

//    CU2_IS_SLAVE := not(CU1_IS_SLAVE)
    
    
OPERATIONS

    cu2_run =
    BEGIN
        // Evaluate the CU2
        cu2_new_main_state <-- cu2_next_main_state(cu2_current_main_state);
        cu2_current_main_state := cu2_new_main_state;
        
        IF cu2_new_main_state = ON THEN
            cu2_new_on_state <-- cu2_next_on_state(cu2_current_on_state);
            cu2_current_on_state := cu2_new_on_state
        END;
        
        IF cu2_new_on_state = RUNNING THEN
            cu2_new_running_state <-- cu2_next_running_state(cu2_current_running_state);
            cu2_current_running_state := cu2_new_running_state
        END
        
        // Get the current state from CU1 and CU2
        
    END
    

 END